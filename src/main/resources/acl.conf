# 配置文件规范示意
# permission 可选值 allow | deny （单独一行，使用中括号括起）
# type 可选值  USER | IP | CLIENT | ALL
# type-values 可填写: 1) 具体值 , 2) plugin:com.x.y.ZzPlugin , 3) pattern:正则表达式。 多个值使用英文逗号(,)隔开，混合类型是用(|)分隔，系统将按顺序依次调用
# action 可选值  PUB | SUB | PUBSUB | CONN
# topics 要匹配的主题（MQTT协议规范主题名）
# msg-filter 可选值示例  plugin:com.x.y.ZzPlugin

### 注 ###
# 当action为 PUB | SUB | PUBSUB 时，plugin必须为com.ewant.jmqttd.interceptor.AccessControlInterceptor的实现
# 当action为 PUB | PUBSUB 且 permission allow 时，可配置msg-filter选项，用于指定主题消息过滤。plugin必须为com.ewant.jmqttd.interceptor.MessageFilterInterceptor的实现
# 当action为 CONN 时，plugin必须为com.ewant.jmqttd.interceptor.ConnectionAuthInterceptor的实现
# 当action为CONN，如果这里没有配置，默认对所有客户端使用jmqttd.conf配置文件中的用户名密码进行匹配过滤。客户端的clientId也将根据MQTT规范进行匹配过滤
# 
# 当type为ALL时，type-values只能使用plugin进行认证
# 
# ***********切记：配置文件值不可以换行*********


# 允许指定用户发布指定主题消息，并使用消息过滤器
# 允许用户名为 user1, user2的用户发布消息到/a/b,/a/c主题，并且所发布的消息经过消息过滤器处理
[allow]
type = USER
type-values = user1, user2
action = PUB
topics = /a/b,/a/c
msg-filter = plugin:com.ewant.jmqttd.interceptor.MessageFilterInterceptor

[allow]
type = IP
type-values = 127.0.0.1, 192.168.0.1|pattern: 10.41.*
action = SUB
topics = /a/b,/a/c

[deny]
type = CLIENT
type-values = client-123, client-456
action = PUBSUB
topics = /a/b,/a/c

# 所有端连接到服务器，必须经过ConnectionAuthInterceptor控制
[allow]
type = ALL
action = CONN
type-values = plugin:com.ewant.jmqttd.interceptor.ConnectionAuthInterceptor

# 允许所有连接到服务器的客户端发布任何主题消息，都使用过滤器
[allow]
type = ALL
action = PUB
topics = #,#/#,$/#
msg-filter = plugin:com.ewant.jmqttd.interceptor.MessageFilterInterceptor